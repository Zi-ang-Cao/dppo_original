defaults:
  - _self_
hydra:
  run:
    dir: ${logdir}
_target_: agent.finetune.train_dql_diffusion_agent.TrainDQLDiffusionAgent

name: ${env_name}_dql_diffusion_mlp_ta${horizon_steps}_td${denoising_steps}
logdir: ./log/robomimic-finetune/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
# base_policy_path: ${oc.env:DPPO_LOG_DIR}/robomimic-pretrain/transport/transport_pre_diffusion_mlp_ta8_td20/2024-07-08_11-18-59/checkpoint/state_8000.pt
base_policy_path: ./log/robomimic-pretrain/transport_pre_diffusion_mlp_ta8_td100_ddim-100steps_size2048/2025-04-21_08-40-08_47/checkpoint/state_3000.pt
robomimic_env_cfg_path: cfg/robomimic/env_meta/${env_name}.json
normalization_path: ./log/robomimic/${env_name}/normalization.npz

seed: 42
device: cuda:0
env_name: transport
obs_dim: 59
action_dim: 14
denoising_steps: 100
cond_steps: 1
horizon_steps: 8
act_steps: 8

use_ddim: True
ddim_steps: 100

env:
  n_envs: 50
  name: ${env_name}
  best_reward_threshold_for_success: 1
  max_episode_steps: 800
  save_video: False
  wrappers:
    robomimic_lowdim:
      normalization_path: ${normalization_path}
      low_dim_keys: ['robot0_eef_pos',
                    'robot0_eef_quat',
                    'robot0_gripper_qpos',
                    "robot1_eef_pos",
                    "robot1_eef_quat",
                    "robot1_gripper_qpos",
                    'object'] # same order of preprocessed observations
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

wandb:
  project: robomimic-baselines
  group: ${env_name}-dql-ddim
  run: ${now:%H-%M-%S}_${name}

train:
  n_train_itr: 84
  n_critic_warmup_itr: 5
  n_steps: 400
  gamma: 0.999
  actor_lr: 1e-5
  actor_weight_decay: 0
  actor_lr_scheduler:
    first_cycle_steps: 1000
    warmup_steps: 10
    min_lr: 1e-5
  critic_lr: 1e-3
  critic_weight_decay: 0
  critic_lr_scheduler:
    first_cycle_steps: 1000
    warmup_steps: 10
    min_lr: 1e-3
  save_model_freq: 100
  val_freq: 4
  render:
    freq: 1
    num: 0
  # DQL specific
  scale_reward_factor: 1
  target_ema_rate: 0.005
  buffer_size: 1000000
  eta: 1.0
  replay_ratio: 16
  batch_size: 1000

model:
  _target_: model.diffusion.diffusion_dql.DQLDiffusion
  # Sampling HPs
  min_sampling_denoising_std: 0.1
  randn_clip_value: 3
  #
  network_path: ${base_policy_path}
  actor:
    _target_: model.diffusion.mlp_diffusion.DiffusionMLP
    time_dim: 32
    # mlp_dims: [1024, 1024, 1024]
    mlp_dims: [2048, 2048, 2048]
    residual_style: True
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    horizon_steps: ${horizon_steps}
    action_dim: ${action_dim}
  critic:
    _target_: model.common.critic.CriticObsAct
    action_dim: ${action_dim}
    action_steps: ${act_steps}
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    mlp_dims: [256, 256, 256]
    activation_type: Mish
    residual_style: True
  horizon_steps: ${horizon_steps}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  denoising_steps: ${denoising_steps}
  device: ${device}
  use_ddim: ${use_ddim}
  ddim_steps: ${ddim_steps}